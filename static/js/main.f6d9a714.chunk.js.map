{"version":3,"sources":["components/TableSettingPagination.js","components/Next.js","components/Previous.js","components/TableSetup.js","components/RecipePreparation.js","components/CleaningUp.js","components/pages/DashboardPage.js","components/pages/Loginpage.js","App.js","components/pages/NotFoundPage.js","components/Header.js","components/Footer.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["TableSettingPagination","props","data","map","item","indexKey","react_default","a","createElement","reactstrap_es","onClick","setCurrentStep","visitToStep","id","value","className","currentStep","disabled","key","Next","handleNextClick","length","Previous","handlePreviousClick","TableSetup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","index","setState","appear","state","fadeIn","currentIndex","undefined","_this2","filteredItem","filter","components_TableSettingPagination","components_Previous","src","url","alt","title","components_Next","Component","RecipePreparation","CleaningUp","DashboardPage","mainStep","setStepTo1","setStepTo2","setStepTo3","currentComponent","step","components_TableSetup","components_RecipePreparation","components_CleaningUp","LoginPage","Link","to","loginMe","App","isLoggedIn","userValue","passwordValue","errorMessage","handleUserChange","e","target","handlePasswordChange","authorised","user","password","console","log","DashboardPage_DashboardPage","type","onChange","Loginpage","NotFoundPage","Header","Footer","AppRouter","BrowserRouter","components_Header","Switch","Route","path","component","exact","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","routers_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uaAuBeA,EAbgB,SAAAC,GAC7B,OAAOC,EAAKC,IAAI,SAACC,EAAMC,GAAP,OACdC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAMT,EAAMU,eAAeV,EAAMW,aAAeR,EAAKS,KAC9DC,MAAOV,EAAKS,GACZE,WAZ6BF,EAYQT,EAAKS,GAZTG,EAYaf,EAAMe,YAXpDH,GAAMG,EACD,oBACEH,EAAKG,EACP,4BADF,GAUHC,SAAUb,EAAKS,GAAKZ,EAAMe,YAC1BE,IAAKb,GAEJD,EAAKS,IAhBsB,IAACA,EAAIG,KCUxBG,EATH,SAAClB,GACT,OACIK,EAAAC,EAAAC,cAAA,OAAKO,UAAU,kBACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQM,UAAU,sBAAsBL,QAAS,kBAAIT,EAAMmB,gBAAgBnB,EAAMe,cAChFC,SAAUhB,EAAMe,aAAed,EAAKmB,QADrC,UCKMC,EATC,SAACrB,GACb,OACIK,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sBACZT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQM,UAAU,0BAA0BL,QAAS,kBAAIT,EAAMsB,oBAAoBtB,EAAMe,cACzFC,SAAUhB,EAAMe,aAAe,GAD/B,cCqEIQ,cArEb,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3B,KAQRU,eAAiB,SAAAqB,GACfP,EAAKQ,SAAS,CACZrB,YAAaoB,EACbE,QAAST,EAAKU,MAAMD,OACpBE,OAAQX,EAAKU,MAAMC,UAbJX,EAiBnBL,gBAAkB,SAAAY,GAChB,IAAIK,EAAeL,EAAQ9B,EAAKmB,OAASW,EAAQ,EAAKA,EAAQ9B,EAAKmB,OACnEI,EAAKQ,SAAS,CACZjB,YAAaqB,EACbzB,iBAAa0B,KArBEb,EAyBnBF,oBAAsB,SAAAS,GACpB,IAAIK,EAAeL,EAAQ,EAAIA,EAAQ,EAAKA,EAAQ,EACpDP,EAAKQ,SAAS,CACZjB,YAAaqB,EACbzB,iBAAa0B,KA3Bfb,EAAKU,MAAQ,CACXnB,YAAa,EACboB,QAAQ,EACRF,QAAQ,EACRtB,iBAAa0B,GANEb,wEAgCV,IAAAc,EAAAX,KACDY,EAAetC,EAAKuC,OACxB,SAAArC,GAAI,OAAIA,EAAKS,MAAQ0B,EAAKJ,MAAMvB,aAAe2B,EAAKJ,MAAMnB,eAE5D,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAACkC,EAAD,CACE/B,eAAgBiB,KAAKjB,eACrBK,YAAaY,KAAKO,MAAMnB,YACxBJ,YAAagB,KAAKhB,cAEpBN,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAACmC,EAAD,CACE3B,YAAaY,KAAKO,MAAMnB,YACxBO,oBAAqBK,KAAKL,sBAG5BjB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,OACEO,UAAU,UACV6B,IAAKJ,EAAa,GAAGK,IACrBC,IAAKN,EAAa,GAAGO,SAIzBzC,EAAAC,EAAAC,cAACwC,EAAD,CACE5B,gBAAiBQ,KAAKR,gBACtBJ,YAAaY,KAAKO,MAAMnB,eAG5BV,EAAAC,EAAAC,cAAA,UAAKgC,EAAa,GAAGO,eAhEJE,aCCVC,EALW,kBACxB5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mDCGW2C,EALI,kBACjB7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4CCEiB4C,6MACnBjB,MAAQ,CACNkB,SAAU,KAEZC,WAAa,kBAAM7B,EAAKQ,SAAS,CAAEoB,SAAU,OAC7CE,WAAa,kBAAM9B,EAAKQ,SAAS,CAAEoB,SAAU,OAC7CG,WAAa,kBAAM/B,EAAKQ,SAAS,CAAEoB,SAAU,OAC7CI,iBAAmB,SAAAC,GACjB,OAAQjC,EAAKU,MAAMkB,UACjB,KAAK,EACH,OAAO/C,EAAAC,EAAAC,cAACmD,EAAD,MACT,KAAK,EACH,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MACT,KAAK,EACH,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MACT,QACE,OAAOvD,EAAAC,EAAAC,cAAA,uIAIX,OACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6CACCoB,KAAK6B,iBAAiB7B,KAAKO,MAAMkB,UAClC/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAASkB,KAAK0B,WACdvC,UAAmC,IAAxBa,KAAKO,MAAMkB,SAAiB,eAAiB,MAEvD,IAJH,2BAK2B,KAE3B/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAASkB,KAAK2B,WACdxC,UAAmC,IAAxBa,KAAKO,MAAMkB,SAAiB,eAAiB,MAEvD,IAJH,kCAKkC,KAElC/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAASkB,KAAK4B,WACdzC,UAAmC,IAAxBa,KAAKO,MAAMkB,SAAiB,eAAiB,MAF1D,oCAtCmCJ,qBCS5Ba,EAZG,SAAA7D,GAAK,OACrBK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCAIAF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,GAAG,aAAatD,QAAST,EAAMgE,SAClC,IADH,SAES,eCgEEC,oNAnEb/B,MAAQ,CACNgC,YAAY,EACZC,UAAW,IACXC,cAAe,IACfC,aAAc,OAEhBC,iBAAmB,SAAAC,GACjB/C,EAAKQ,SAAS,CACZmC,UAAWI,EAAEC,OAAO3D,WAGxB4D,qBAAuB,SAAAF,GACrB/C,EAAKQ,SAAS,CACZoC,cAAeG,EAAEC,OAAO3D,WAG5BmD,QAAU,WACR,IAAIU,EACAL,EACJpE,EAAKC,IAAI,SAAAC,GAWP,OATEA,EAAKwE,OAASnD,EAAKU,MAAMiC,WACzBhE,EAAKyE,WAAapD,EAAKU,MAAMkC,cAE7BM,GAAa,EAEbL,EAAe,iCAGjBQ,QAAQC,IAAIJ,GACLA,IAETlD,EAAKQ,SAAS,CAAEkC,WAAYQ,EAC1BL,aAAeA,6EAMjB,OACEhE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACZa,KAAKO,MAAMgC,WACV7D,EAAAC,EAAAC,cAACwE,EAAD,MAEA1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,KAAGO,UAAU,gBAAgBa,KAAKO,MAAMmC,cACxChE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOyE,KAAK,OAAOC,SAAUtD,KAAK2C,oBAEpCjE,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOyE,KAAK,WAAWC,SAAUtD,KAAK8C,yBAI1CpE,EAAAC,EAAAC,cAAC2E,EAAD,CAAWlB,QAASrC,KAAKqC,mBA5DnBhB,cCEHmC,EANM,kBACnB9E,EAAAC,EAAAC,cAAA,oBACQF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,GAAG,KAAT,kBCEKqB,EALA,kBACb/E,EAAAC,EAAAC,cAAA,UAAQO,UAAU,mBAChBT,EAAAC,EAAAC,cAAA,iCCGW8E,EALA,kBACbhF,EAAAC,EAAAC,cAAA,UAAQO,UAAU,mBAChBT,EAAAC,EAAAC,cAAA,iCCgBW+E,EAbG,kBAChBjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW3B,EAAK4B,OAAO,IACvCxF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAW3B,IACpC5D,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOE,UAAWT,KAEpB9E,EAAAC,EAAAC,cAACuF,EAAD,SCLcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOhG,EAAAC,EAAAC,cAAC+F,EAAD,MAAeC,SAASC,eAAe,SDkHjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f6d9a714.chunk.js","sourcesContent":["import { Button } from 'reactstrap';\nimport React from 'react';\nimport data from '../data/tableSetting.json';\nconst activeAndCompletedClasses = (id, currentStep) => {\n  if (id >= currentStep) {\n    return 'active-class info';\n  } else if (id < currentStep) {\n    return 'completed-class info';\n  }\n};\nconst TableSettingPagination = props => {\n  return data.map((item, indexKey) => (\n    <Button\n      onClick={() => props.setCurrentStep(props.visitToStep || item.id)}\n      value={item.id}\n      className={activeAndCompletedClasses(item.id, props.currentStep)}\n      disabled={item.id > props.currentStep}\n      key={indexKey}\n    >\n      {item.id}\n    </Button>\n  ));\n};\nexport default TableSettingPagination;\n","import React from 'react';\nimport data from '../data/tableSetting.json';\nimport {Button} from 'reactstrap';\n\nconst Next =(props)=>{\n    return(\n        <div className=\"next-container\">\n         <Button className=\"next-button primary\" onClick={()=>props.handleNextClick(props.currentStep)}\n          disabled={props.currentStep >= data.length}\n         >Next</Button>\n        </div>\n    )\n}\nexport default Next","import React from 'react'\nimport data from '../data/tableSetting.json';\nimport {Button} from 'reactstrap';\nconst Previous =(props)=>{\n    return(\n        <div className=\"previous-container\">\n           <Button className=\"previous-button primary\" onClick={()=>props.handlePreviousClick(props.currentStep)}\n           disabled={props.currentStep <= 1}\n           >Previous</Button>\n        </div>\n    )\n}\nexport default Previous","import React, { Component } from 'react';\nimport data from '../data/tableSetting.json';\nimport TableSettingPagination from './TableSettingPagination.js';\nimport Next from './Next.js';\nimport Previous from './Previous.js';\nclass TableSetup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      fadeIn: true,\n      appear: false,\n      visitToStep: undefined,\n    };\n  }\n  setCurrentStep = index => {\n    this.setState({\n      visitToStep: index,\n      appear: !this.state.appear,\n      fadeIn: this.state.fadeIn,\n    });\n  };\n\n  handleNextClick = index => {\n    let currentIndex = index < data.length ? index + 1 : (index = data.length);\n    this.setState({\n      currentStep: currentIndex,\n      visitToStep: undefined,\n    });\n  };\n\n  handlePreviousClick = index => {\n    let currentIndex = index > 1 ? index - 1 : (index = 1);\n    this.setState({\n      currentStep: currentIndex,\n      visitToStep: undefined,\n    });\n  };\n  render() {\n    const filteredItem = data.filter(\n      item => item.id === (this.state.visitToStep || this.state.currentStep)\n    );\n    return (\n      <div>\n        <h2>Welcome to Table setup</h2>\n        <TableSettingPagination\n          setCurrentStep={this.setCurrentStep}\n          currentStep={this.state.currentStep}\n          visitToStep={this.visitToStep}\n        />\n        <div className=\"middle\">\n          <Previous\n            currentStep={this.state.currentStep}\n            handlePreviousClick={this.handlePreviousClick}\n          />\n\n          <div className=\"image-container\">\n            <img\n              className=\"picture\"\n              src={filteredItem[0].url}\n              alt={filteredItem[0].title}\n            />\n          </div>\n\n          <Next\n            handleNextClick={this.handleNextClick}\n            currentStep={this.state.currentStep}\n          />\n        </div>\n        <h1>{filteredItem[0].title}</h1>\n      </div>\n    );\n  }\n}\n\nexport default TableSetup;\n","import React from 'react';\nconst RecipePreparation = () => (\n  <div>\n    <h2>Welcome to Recipe preparation page!</h2>\n  </div>\n);\nexport default RecipePreparation;\n","import React from 'react';\nconst CleaningUp = () => (\n  <div>\n    <h1>Welcome to Cleaning up page!</h1>\n  </div>\n);\nexport default CleaningUp;\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport TableSetup from '../TableSetup';\nimport RecipePreparation from '../RecipePreparation';\nimport CleaningUp from '../CleaningUp';\nexport default class DashboardPage extends Component {\n  state = {\n    mainStep: 0,\n  };\n  setStepTo1 = () => this.setState({ mainStep: 1 });\n  setStepTo2 = () => this.setState({ mainStep: 2 });\n  setStepTo3 = () => this.setState({ mainStep: 3 });\n  currentComponent = step => {\n    switch (this.state.mainStep) {\n      case 1:\n        return <TableSetup />;\n      case 2:\n        return <RecipePreparation />;\n      case 3:\n        return <CleaningUp />;\n      default:\n        return <h1> We are ready to get started ... Say something </h1>;\n    }\n  };\n  render() {\n    return (\n      <div>\n        <h1>Welcome to Cook and Eat Ritual!</h1>\n        {this.currentComponent(this.state.mainStep)}\n        <Button\n          onClick={this.setStepTo1}\n          className={this.state.mainStep === 1 ? 'active-class' : null}\n        >\n          {' '}\n          Table setup startingn...{' '}\n        </Button>\n        <Button\n          onClick={this.setStepTo2}\n          className={this.state.mainStep === 2 ? 'active-class' : null}\n        >\n          {' '}\n          Recipe preparation startingn...{' '}\n        </Button>\n        <Button\n          onClick={this.setStepTo3}\n          className={this.state.mainStep === 3 ? 'active-class' : null}\n        >\n          Cleaning up startingn...\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst LoginPage = props => (\n  <div>\n    <h2>Welcome to Login page!</h2>\n     \n     \n    \n    <Link to=\"/dashboard\" onClick={props.loginMe}>\n      {' '}\n      Log in{' '}\n    </Link>\n  </div>\n);\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport DashboardPage from './components/pages/DashboardPage';\nimport LoginPage from './components/pages/Loginpage';\nimport data from './data/login.json';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false,\n    userValue: ' ',\n    passwordValue: ' ',\n    errorMessage: ' '\n  };\n  handleUserChange = e => {\n    this.setState({\n      userValue: e.target.value,\n    });\n  };\n  handlePasswordChange = e => {\n    this.setState({\n      passwordValue: e.target.value,\n    });\n  };\n  loginMe = () => {\n    let authorised;\n    let errorMessage;\n    data.map(item => {\n      if (\n        item.user === this.state.userValue &&\n        item.password === this.state.passwordValue\n      ) {\n        authorised = true;\n      } else {\n        errorMessage = 'invalid user name and password';\n      \n      }\n      console.log(authorised);\n      return authorised;\n    });\n    this.setState({ isLoggedIn: authorised,\n      errorMessage : errorMessage\n    \n    \n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLoggedIn ? (\n          <DashboardPage />\n        ) : (\n          <div>\n            <form />\n            <p className=\"errorMessage\">{this.state.errorMessage}</p>\n            <ul>\n              <li>\n                <lable>User Name:</lable>\n                <input type=\"text\" onChange={this.handleUserChange} />\n              </li>\n              <p />\n              <li>\n                <lable>Password:</lable>\n                <input type=\"password\" onChange={this.handlePasswordChange} />\n              </li>\n            </ul>\n\n            <LoginPage loginMe={this.loginMe} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\"> go to home </Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nconst Header = () => (\n  <header className=\"bg-color-header\">\n    <h1>Header goes here!</h1>\n  </header>\n);\nexport default Header;\n","import React from 'react';\nconst Footer = () => (\n  <footer className=\"bg-color-footer\">\n    <h1>Footer goes here!</h1>\n  </footer>\n);\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from '../App';\nimport NotFoundPage from '../components/pages/NotFoundPage';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nconst AppRouter = () => (\n  <Router>\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={App} exact={true} />\n        <Route path=\"/dashboard\" component={App} />\n        <Route component={NotFoundPage} />\n      </Switch>\n      <Footer />\n    </div>\n  </Router>\n);\nexport default AppRouter;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}